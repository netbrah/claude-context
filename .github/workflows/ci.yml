name: CI

on:
  push:
    branches: [master, main, claude_context]
  pull_request:
    branches: [master, main, claude_context]

jobs:
  # Primary build and test job on Ubuntu with Node 20.x
  build_and_test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x  # Changed from 20.x to fix tree-sitter-cpp native binding issues
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Verify build outputs
        run: |
          ls -la packages/core/dist || echo "packages/core/dist not found"
          ls -la packages/mcp/dist || echo "packages/mcp/dist not found"

      - name: Run benchmark
        run: pnpm benchmark

      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: build-benchmark.json
          retention-days: 30

      - name: Generate benchmark summary
        run: |
          echo "## Build Performance Benchmark ðŸ“Š" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          node scripts/generate-benchmark-summary.js >> $GITHUB_STEP_SUMMARY

  # Cross-platform validation on Windows and Node 22.x
  cross_platform_validation:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    strategy:
      matrix:
        include:
          - os: windows-latest
            node-version: 20.x
          - os: ubuntu-latest
            node-version: 22.x

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Configure Windows line endings
        if: matrix.os == 'windows-latest'
        run: git config --global core.autocrlf false

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Verify build outputs (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          ls -la packages/core/dist || echo "packages/core/dist not found"
          ls -la packages/mcp/dist || echo "packages/mcp/dist not found"

      - name: Verify build outputs (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          Get-ChildItem packages/core/dist -ErrorAction SilentlyContinue | Format-Table -AutoSize || Write-Host "packages/core/dist not found"
          Get-ChildItem packages/mcp/dist -ErrorAction SilentlyContinue | Format-Table -AutoSize || Write-Host "packages/mcp/dist not found"
