name: Build

# Build validation and performance benchmarks
# Runs on all PRs and pushes to main branches
# Tests build across platforms and Node.js versions

on:
  push:
    branches: [main, master, claude_context]
  pull_request:
    branches: [main, master, claude_context]

# Cancel in-progress runs for same PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-primary:
    name: Build & Benchmark (Ubuntu 20.x)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build all packages
        run: pnpm build

      - name: Verify build outputs
        run: |
          echo "Verifying build artifacts..."
          ls -la packages/core/dist || echo "‚ùå packages/core/dist not found"
          ls -la packages/mcp/dist || echo "‚ùå packages/mcp/dist not found"
          ls -la packages/vscode-extension/dist || echo "‚ùå packages/vscode-extension/dist not found"
          ls -la packages/chrome-extension/dist || echo "‚ùå packages/chrome-extension/dist not found"

      - name: Run build benchmark
        run: pnpm benchmark

      - name: Upload build benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: build-benchmark-ubuntu-20
          path: build-benchmark.json
          retention-days: 30

      - name: Run C++ parsing benchmark
        run: pnpm benchmark:cpp

      - name: Upload C++ benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: cpp-benchmark-ubuntu-20
          path: cpp-benchmark-results.json
          retention-days: 30

      - name: Generate benchmark summary
        run: |
          echo "## Build Performance Benchmark üìä" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Build Times" >> $GITHUB_STEP_SUMMARY
          node scripts/generate-benchmark-summary.js >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### C++ Parser Performance" >> $GITHUB_STEP_SUMMARY
          if [ -f "cpp-benchmark-results.json" ]; then
            echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
            tail -20 cpp-benchmark-results.json >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          fi

  build-cross-platform:
    name: Build (${{ matrix.os }}, Node ${{ matrix.node }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    permissions:
      contents: read
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            node: '20.x'
          - os: macos-latest
            node: '20.x'
          - os: ubuntu-latest
            node: '22.x'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build all packages
        run: pnpm build

      - name: Verify build outputs (Unix)
        if: runner.os != 'Windows'
        run: |
          echo "Verifying build artifacts..."
          ls -la packages/core/dist || echo "‚ùå packages/core/dist not found"
          ls -la packages/mcp/dist || echo "‚ùå packages/mcp/dist not found"

      - name: Verify build outputs (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Write-Host "Verifying build artifacts..."
          if (Test-Path packages/core/dist) { Get-ChildItem packages/core/dist | Format-Table -AutoSize } else { Write-Host "‚ùå packages/core/dist not found" }
          if (Test-Path packages/mcp/dist) { Get-ChildItem packages/mcp/dist | Format-Table -AutoSize } else { Write-Host "‚ùå packages/mcp/dist not found" }
